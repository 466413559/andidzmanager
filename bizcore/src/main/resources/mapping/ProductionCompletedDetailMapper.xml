<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.andidz.bizcore.mapper.ProductionCompletedDetailMapper">
  <resultMap id="BaseResultMap" type="com.andidz.bizcore.domain.ProductionCompletedDetail">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="planId" jdbcType="INTEGER" property="planid" />
    <result column="taskId" jdbcType="INTEGER" property="taskid" />
    <result column="orderNumb" jdbcType="VARCHAR" property="ordernumb" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="completed_produce" jdbcType="INTEGER" property="completedProduce" />
    <result column="qualified_produce" jdbcType="INTEGER" property="qualifiedProduce" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="feature" jdbcType="VARCHAR" property="feature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, planId, taskId, orderNumb, createTime, updateTime, status, type, completed_produce, 
    qualified_produce, operator, feature
  </sql>
  <select id="selectByExample" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from production_completed_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start != 0 or pageSize != 0">
      limit #{start},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from production_completed_detail
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from production_completed_detail
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetailExample">
    delete from production_completed_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetail">
    insert into production_completed_detail (Id, planId, taskId, 
      orderNumb, createTime, updateTime, 
      status, type, completed_produce, 
      qualified_produce, operator, feature
      )
    values (#{id,jdbcType=INTEGER}, #{planid,jdbcType=INTEGER}, #{taskid,jdbcType=INTEGER}, 
      #{ordernumb,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{completedProduce,jdbcType=INTEGER}, 
      #{qualifiedProduce,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetail">
    insert into production_completed_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="planid != null">
        planId,
      </if>
      <if test="taskid != null">
        taskId,
      </if>
      <if test="ordernumb != null">
        orderNumb,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="completedProduce != null">
        completed_produce,
      </if>
      <if test="qualifiedProduce != null">
        qualified_produce,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="feature != null">
        feature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="planid != null">
        #{planid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null">
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="ordernumb != null">
        #{ordernumb,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="completedProduce != null">
        #{completedProduce,jdbcType=INTEGER},
      </if>
      <if test="qualifiedProduce != null">
        #{qualifiedProduce,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetailExample" resultType="java.lang.Integer">
    select count(*) from production_completed_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update production_completed_detail
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.planid != null">
        planId = #{record.planid,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null">
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.ordernumb != null">
        orderNumb = #{record.ordernumb,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.completedProduce != null">
        completed_produce = #{record.completedProduce,jdbcType=INTEGER},
      </if>
      <if test="record.qualifiedProduce != null">
        qualified_produce = #{record.qualifiedProduce,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.feature != null">
        feature = #{record.feature,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update production_completed_detail
    set Id = #{record.id,jdbcType=INTEGER},
      planId = #{record.planid,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=INTEGER},
      orderNumb = #{record.ordernumb,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      completed_produce = #{record.completedProduce,jdbcType=INTEGER},
      qualified_produce = #{record.qualifiedProduce,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      feature = #{record.feature,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetail">
    update production_completed_detail
    <set>
      <if test="planid != null">
        planId = #{planid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null">
        taskId = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="ordernumb != null">
        orderNumb = #{ordernumb,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="completedProduce != null">
        completed_produce = #{completedProduce,jdbcType=INTEGER},
      </if>
      <if test="qualifiedProduce != null">
        qualified_produce = #{qualifiedProduce,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        feature = #{feature,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.andidz.bizcore.domain.ProductionCompletedDetail">
    update production_completed_detail
    set planId = #{planid,jdbcType=INTEGER},
      taskId = #{taskid,jdbcType=INTEGER},
      orderNumb = #{ordernumb,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      completed_produce = #{completedProduce,jdbcType=INTEGER},
      qualified_produce = #{qualifiedProduce,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      feature = #{feature,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>